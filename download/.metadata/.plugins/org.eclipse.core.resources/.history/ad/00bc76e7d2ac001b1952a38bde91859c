package spider;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Spider2 {
	public static void main(String[] args) {
		synchronized (this) {
			process = Runtime.getRuntime().exec(cmds);
			}

			//记录进程缓存错误信息
			final StringBuffer errorLog = new StringBuffer();
			//获取执行进程的错误流
			final InputStream errorStream = process.getErrorStream();
			final InputStream inputStream = process.getInputStream();
			//处理InputStream的线程
			new Thread() {
			public void run() {
			BufferedReader in = new BufferedReader(new InputStreamReader(inputStream));
			String line = null;
			try {
			while ((line = in.readLine()) != null && !errorLog.toString().contains("ERROR")) {
			if (line != null) {
			errorLog.append(line);
			}
			}
			} catch (IOException e) {
			throw new RuntimeException("[shell exec error]:" + errorLog, e);
			} finally {
			try {
			inputStream.close();
			} catch (IOException e) {
			e.printStackTrace();
			}
			}
			}
			}.start();
			//处理errorStream的线程
			new Thread() {
			@Override
			public void run() {
			BufferedReader err = new BufferedReader(new InputStreamReader(errorStream));
			String line = null;
			try {
			while ((line = err.readLine()) != null && !errorLog.toString().contains("ERROR")) {
			if (line != null) {
			errorLog.append(line);
			}
			}
			} catch (IOException e) {
			throw new RuntimeException("[shell exec error]:" + errorLog, e);
			} finally {
			try {
			errorStream.close();
			} catch (IOException e) {
			e.printStackTrace();
			}
			}
			}
			}.start();

			logger.info("等待shell脚本执行完成");
			Thread.sleep(1000);
			//异常终止
			if (errorLog != null && errorLog.length() > 0 && errorLog.toString().contains("ERROR")) {
			dispatchLogger.error("[shell exec error]:" + errorLog);
			throw new RuntimeException("[shell exec error]:" + errorLog);
			}
			process.waitFor(); //等待shell脚本执行完成
	}
}
